[{"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\index.js":"1","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\App.js":"2","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\reportWebVitals.js":"3","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Header.js":"4","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Users.js":"5","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Exam.js":"6","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Question.js":"7","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\QuestionEdit.js":"8","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\QuestionUser.js":"9","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\LogIn.js":"10","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Home.js":"11","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Register.js":"12","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Course.js":"13","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\CourseUser.js":"14","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\CourseEdit.js":"15","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Footer.js":"16","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\index.js":"17","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\config.js":"18","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\components\\App.js":"19","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\components\\Course.js":"20","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\components\\CourseEdit.js":"21","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\components\\CourseUser.js":"22","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\components\\LogIn.js":"23","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\components\\Register.js":"24","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\components\\Exam.js":"25","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\components\\Header.js":"26","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\components\\Home.js":"27","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\components\\Footer.js":"28","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\components\\Question.js":"29","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\components\\QuestionEdit.js":"30","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\components\\QuestionUser.js":"31","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\actions\\functions.js":"32"},{"size":500,"mtime":1611128279946,"results":"33","hashOfConfig":"34"},{"size":3207,"mtime":1611744855573,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":499162500000,"results":"36","hashOfConfig":"34"},{"size":1174,"mtime":1611695694651,"results":"37","hashOfConfig":"34"},{"size":2274,"mtime":1609021106062,"results":"38","hashOfConfig":"34"},{"size":4146,"mtime":1611746327413,"results":"39","hashOfConfig":"34"},{"size":1178,"mtime":1611722791741,"results":"40","hashOfConfig":"34"},{"size":5491,"mtime":1611746644247,"results":"41","hashOfConfig":"34"},{"size":3365,"mtime":1611747406782,"results":"42","hashOfConfig":"34"},{"size":810,"mtime":1611606173444,"results":"43","hashOfConfig":"34"},{"size":1822,"mtime":1611746419089,"results":"44","hashOfConfig":"34"},{"size":1279,"mtime":1611606338079,"results":"45","hashOfConfig":"34"},{"size":1031,"mtime":1611744327392,"results":"46","hashOfConfig":"34"},{"size":3007,"mtime":1611744697791,"results":"47","hashOfConfig":"34"},{"size":2840,"mtime":1611746501650,"results":"48","hashOfConfig":"34"},{"size":417,"mtime":1610592434881,"results":"49","hashOfConfig":"34"},{"size":232,"mtime":1612771171575,"results":"50","hashOfConfig":"51"},{"size":181,"mtime":1612350036355,"results":"52","hashOfConfig":"51"},{"size":2597,"mtime":1612771815599,"results":"53","hashOfConfig":"51"},{"size":884,"mtime":1612525173102,"results":"54","hashOfConfig":"51"},{"size":2256,"mtime":1612523801594,"results":"55","hashOfConfig":"51"},{"size":2565,"mtime":1612540133272,"results":"56","hashOfConfig":"51"},{"size":940,"mtime":1612380531539,"results":"57","hashOfConfig":"51"},{"size":2014,"mtime":1612540262535,"results":"58","hashOfConfig":"51"},{"size":3260,"mtime":1612540178312,"results":"59","hashOfConfig":"51"},{"size":1173,"mtime":1612431815252,"results":"60","hashOfConfig":"51"},{"size":1457,"mtime":1612373623284,"results":"61","hashOfConfig":"51"},{"size":418,"mtime":1612540190847,"results":"62","hashOfConfig":"51"},{"size":990,"mtime":1612538298152,"results":"63","hashOfConfig":"51"},{"size":3991,"mtime":1612538511949,"results":"64","hashOfConfig":"51"},{"size":2841,"mtime":1612539942000,"results":"65","hashOfConfig":"51"},{"size":8891,"mtime":1612769159097,"results":"66","hashOfConfig":"51"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"1uw66iz",{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"69"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"e0srg3",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"104"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"104"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"104"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\index.js",[],["138","139"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\App.js",["140"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\reportWebVitals.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Header.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Users.js",[],["141","142"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Exam.js",["143","144"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Question.js",["145"],"import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport QuestionEdit from './QuestionEdit.js'\r\nimport QuestionUser from './QuestionUser.js'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nconst Question = ({ token, profile }) => {\r\n  const [myToken, setMyToken] = useState(token)\r\n  const [myProfile, setMyProfile] = useState(profile)\r\n//  const [examId, setExamId] = useState(examid)\r\n  const { examid } = useParams()\r\n\r\n\r\n  const getToken = async () => {\r\n    setMyToken(localStorage.getItem('token'))\r\n  }\r\n\r\n  const getProfile = async () => {\r\n    await axios\r\n      .get(`http://localhost:3001/user/profile`, {\r\n        headers: {\r\n          'authorization': `${myToken}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        setMyProfile(response.data)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!myToken)\r\n      getToken()\r\n    if (!myProfile)\r\n      getProfile()\r\n  }, [myToken, myProfile])\r\n  \r\n  return (\r\n    myProfile.usertype === 'teacher' \r\n    ? <QuestionEdit token={myToken} profile={myProfile} /> \r\n    : <QuestionUser token={myToken} profile={myProfile} examid={examid} userid={myProfile.id} />\r\n  )\r\n}\r\n\r\nexport default Question","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\QuestionEdit.js",["146","147"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\QuestionUser.js",["148","149","150","151","152","153","154","155","156"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\LogIn.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Home.js",["157"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Register.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Course.js",["158"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\CourseUser.js",["159","160"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\CourseEdit.js",["161"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Footer.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\index.js",[],["162","163"],"C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\config.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\components\\App.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\components\\Course.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\components\\CourseEdit.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\components\\CourseUser.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\components\\LogIn.js",["164","165","166","167"],"import { useEffect, useState } from \"react\"\r\nimport { Button, TextField, Card } from '@material-ui/core'\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { logIn } from '../actions/functions.js'\r\n\r\nconst LogIn = ({ logIn }) => {\r\n  const [userEmail, setUserEmail] = useState()\r\n  const [userPassword, setUserPassword] = useState()\r\n\r\n  return (\r\n    <div className=\"Tenttilista\">\r\n      <Card className=\"kortti\">\r\n        <div>\r\n          <TextField label={'email'} onChange={(e) => setUserEmail(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <TextField label={'password'} type={'password'} onChange={(e) => setUserPassword(e.target.value)} /> \r\n        </div>\r\n        <div>\r\n          <Button onClick={() => logIn(userEmail, userPassword)}> <FormattedMessage id=\"login.login\" /> </Button>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LogIn\r\n","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\components\\Register.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\components\\Exam.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\components\\Header.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\components\\Home.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\components\\Footer.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\components\\Question.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\components\\QuestionEdit.js",["168"],"import { useEffect, useState } from 'react'\r\nimport { Button, Card, TextField, Checkbox } from '@material-ui/core'\r\nimport { green } from '@material-ui/core/colors'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { \r\n  getQuestion, newQuestion, deleteQuestion, \r\n  updateQuestion, getChoice, addChoice, \r\n  deleteChoice, updateChoice, updateCorrect\r\n} from '../actions/functions.js'\r\n\r\nconst QuestionEdit = ({ mytoken, examid }) => {\r\n  const [token, setToken] = useState(mytoken)\r\n  const [question, setQuestion] = useState([]) \r\n  const [choice, setChoice] = useState([]) \r\n  const [refresh, setRefresh] = useState(false)\r\n\r\n  const callNewQuestion = async () => {\r\n    const callback = result => {\r\n      setRefresh(!refresh)\r\n    }\r\n    newQuestion(token, examid, callback)\r\n  }\r\n\r\n  const callDeleteQuestion = async (id) => {\r\n    const callback = result => {\r\n      setRefresh(!refresh)\r\n    }\r\n    deleteQuestion(token, id, callback)\r\n  }\r\n\r\n  const callUpdateQuestion = async (id, value) => {\r\n    if (value.length < 1)\r\n      return\r\n\r\n    const callback = result => {\r\n      setRefresh(!refresh)\r\n    }\r\n    updateQuestion(token, id, value, callback)\r\n  }\r\n\r\n  const callAddChoice = async (id) => {\r\n    const callback = result => {\r\n      setRefresh(!refresh)\r\n    }\r\n    addChoice(token, id, callback)\r\n  }\r\n\r\n  const callDeleteChoice = async (id) => {\r\n    const callback = result => {\r\n      setRefresh(!refresh)\r\n    }\r\n    deleteChoice(token, id, callback)\r\n  }\r\n\r\n  const callUpdateChoice = async (id, value) => {\r\n    const callback = result => {\r\n      setRefresh(!refresh)\r\n    }\r\n    updateChoice(token, id, value, callback)\r\n  }\r\n\r\n  const callUpdateCorrect = async (id, value) => {\r\n    const callback = result => {\r\n      setRefresh(!refresh)\r\n    }\r\n    updateCorrect(token, id, value, callback)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const callGetQuestion = () => {\r\n      const callback = result => {\r\n        setQuestion(result)\r\n      }\r\n      getQuestion(token, examid, callback)\r\n    }\r\n    const callGetChoice = () => {\r\n      const callback = result => {\r\n        setChoice(result)\r\n      }\r\n      getChoice(token, examid, callback)\r\n    }\r\n\r\n    if (!token)\r\n      setToken(localStorage.getItem('token'))\r\n    else {\r\n      callGetQuestion()\r\n      callGetChoice()\r\n    }\r\n  }, [refresh, examid])\r\n\r\n  return (\r\n    <>\r\n      {question.map((q, index) => \r\n        <Card className=\"kortti\" key={`${examid}questioncard${index}`}> \r\n          <div className=\"sulkuNappi\">\r\n            <Button onClick={() => callDeleteQuestion(q.id)} color=\"secondary\" > \r\n              × \r\n            </Button>\r\n          </div>\r\n          <TextField \r\n            label={q.question}\r\n            defaultValue={''}\r\n            style={ {width: '90%'} }\r\n            onBlur={ (e) => callUpdateQuestion(q.id, e.target.value) } \r\n          />\r\n          {choice.filter(filtered => \r\n          (filtered.questionid === q.id && filtered.id !== null))\r\n            .map((c, index) => \r\n            <div key={`choiceboxes${index}`}> \r\n              <Checkbox\r\n                checked={c.correct}\r\n                style={{ color: green[500] }}\r\n                name={q.question + \" \" + q.id} \r\n                onChange={ (e) => callUpdateCorrect(c.id, e.target.checked) } \r\n              />\r\n              <TextField \r\n                defaultValue={c.choice}\r\n                style={ {width: '50%'} } \r\n                onBlur={ (e) => callUpdateChoice(c.id, e.target.value) } \r\n              />\r\n              <Button onClick={() => callDeleteChoice(c.id)} color=\"secondary\" >\r\n                × \r\n              </Button>\r\n            </div>\r\n          )}\r\n          <Button onClick={() => callAddChoice(q.id)} color=\"primary\" > \r\n            + \r\n          </Button>\r\n        </Card>\r\n      )}\r\n      <Button onClick={callNewQuestion} color=\"primary\" > \r\n        <FormattedMessage id=\"question.newquestion\" /> \r\n      </Button>\r\n    </>\r\n  )  \r\n} \r\n\r\nexport default QuestionEdit\r\n","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\components\\QuestionUser.js",["169","170","171","172"],"import { useEffect, useState } from 'react'\r\nimport { Button, Card, TextField, Checkbox } from '@material-ui/core'\r\nimport { green } from '@material-ui/core/colors'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { \r\n  getQuestion,\r\n  getStudentChoice,\r\n  updateAnswer,\r\n  updateFinished\r\n} from '../actions/functions.js'\r\n\r\nconst QuestionUser = ({ mytoken, examid, userid }) => {\r\n  const [token, setToken] = useState(mytoken)\r\n\r\n  const [question, setQuestion] = useState([]) \r\n  const [choice, setChoice] = useState([]) \r\n  const [finished, setFinished] = useState(false)\r\n  const [refresh, setRefresh] = useState(false)\r\n\r\n  const callUpdateAnswer = async (id, value) => {\r\n    const callback = result => {\r\n      setRefresh(!refresh)\r\n    }\r\n    updateAnswer(token, examid, userid, id, value, callback)\r\n  }\r\n\r\n  const callUpdateFinished = async () => {\r\n    const callback = result => {\r\n      setRefresh(!refresh)\r\n    }\r\n    updateFinished(token, examid, userid, callback)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const callGetQuestion = () => {\r\n      const callback = result => {\r\n        setQuestion(result)\r\n      }\r\n      getQuestion(token, examid, callback)\r\n    }\r\n    const callGetChoice = () => {\r\n      const callback = result => {\r\n        setChoice(result)\r\n        setFinished(result[0].finished)\r\n      }\r\n      getStudentChoice(token, userid, examid, callback)\r\n    }\r\n\r\n    if (!token)\r\n      setToken(localStorage.getItem('token'))\r\n    else {\r\n      callGetQuestion()\r\n      callGetChoice()\r\n    }\r\n  }, [refresh, examid])\r\n\r\n  return (\r\n    <div>\r\n      {question.map((q, index) => \r\n        <Card className=\"kortti\" key={`questioncard${index}`}> \r\n          <div>\r\n            {q.question}\r\n            {/* // if finished then checkicon else blockicon */}\r\n          </div>\r\n          {choice.filter(filtered => \r\n          (filtered.questionid === q.id && filtered.choiceid !== null))\r\n            .map((c, index) => \r\n            <div key={`checkboxdivi${index}`}>\r\n              <Checkbox\r\n                checked={c.answer}\r\n                disabled={ finished }\r\n                checked={c.answer}\r\n                disabled={ finished }\r\n                onChange={ (e) => callUpdateAnswer(c.choiceid, e.target.checked) } \r\n              />\r\n              {finished \r\n              ? <Checkbox \r\n                  style={{ color: green[500] }}\r\n                  checked={c.correct}\r\n                /> \r\n              : \"\"}\r\n              <label>{c.name}</label>\r\n            </div>\r\n          )}\r\n        </Card>\r\n      )}\r\n      <div>\r\n        <Button \r\n          onClick={callUpdateFinished} \r\n          variant=\"contained\" \r\n          color=\"primary\" \r\n        > \r\n          <FormattedMessage id=\"question.finished\" /> \r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuestionUser\r\n","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\actions\\functions.js",[],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":97,"column":6,"nodeType":"179","endLine":97,"endColumn":13,"suggestions":"180"},{"ruleId":"173","replacedBy":"181"},{"ruleId":"175","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":9,"column":3,"nodeType":"185","messageId":"186","endLine":9,"endColumn":11},{"ruleId":"177","severity":1,"message":"187","line":114,"column":6,"nodeType":"179","endLine":114,"endColumn":44,"suggestions":"188"},{"ruleId":"177","severity":1,"message":"189","line":36,"column":6,"nodeType":"179","endLine":36,"endColumn":26,"suggestions":"190"},{"ruleId":"183","severity":1,"message":"191","line":14,"column":10,"nodeType":"185","messageId":"186","endLine":14,"endColumn":19},{"ruleId":"177","severity":1,"message":"192","line":175,"column":6,"nodeType":"179","endLine":175,"endColumn":23,"suggestions":"193"},{"ruleId":"183","severity":1,"message":"194","line":2,"column":24,"nodeType":"185","messageId":"186","endLine":2,"endColumn":33},{"ruleId":"183","severity":1,"message":"195","line":6,"column":3,"nodeType":"185","messageId":"186","endLine":6,"endColumn":16},{"ruleId":"183","severity":1,"message":"196","line":7,"column":3,"nodeType":"185","messageId":"186","endLine":7,"endColumn":12},{"ruleId":"183","severity":1,"message":"197","line":13,"column":19,"nodeType":"185","messageId":"186","endLine":13,"endColumn":29},{"ruleId":"183","severity":1,"message":"191","line":14,"column":10,"nodeType":"185","messageId":"186","endLine":14,"endColumn":19},{"ruleId":"183","severity":1,"message":"198","line":14,"column":21,"nodeType":"185","messageId":"186","endLine":14,"endColumn":33},{"ruleId":"177","severity":1,"message":"199","line":84,"column":6,"nodeType":"179","endLine":84,"endColumn":23,"suggestions":"200"},{"ruleId":"201","severity":1,"message":"202","line":100,"column":17,"nodeType":"203","endLine":100,"endColumn":35},{"ruleId":"201","severity":1,"message":"202","line":101,"column":17,"nodeType":"203","endLine":101,"endColumn":38},{"ruleId":"177","severity":1,"message":"204","line":50,"column":6,"nodeType":"179","endLine":50,"endColumn":26,"suggestions":"205"},{"ruleId":"177","severity":1,"message":"189","line":32,"column":6,"nodeType":"179","endLine":32,"endColumn":26,"suggestions":"206"},{"ruleId":"183","severity":1,"message":"207","line":13,"column":9,"nodeType":"185","messageId":"186","endLine":13,"endColumn":17},{"ruleId":"177","severity":1,"message":"208","line":94,"column":6,"nodeType":"179","endLine":94,"endColumn":8,"suggestions":"209"},{"ruleId":"177","severity":1,"message":"204","line":85,"column":6,"nodeType":"179","endLine":85,"endColumn":35,"suggestions":"210"},{"ruleId":"173","replacedBy":"211"},{"ruleId":"175","replacedBy":"212"},{"ruleId":"183","severity":1,"message":"213","line":1,"column":10,"nodeType":"185","messageId":"186","endLine":1,"endColumn":19},{"ruleId":"183","severity":1,"message":"214","line":3,"column":10,"nodeType":"185","messageId":"186","endLine":3,"endColumn":14},{"ruleId":"183","severity":1,"message":"184","line":3,"column":16,"nodeType":"185","messageId":"186","endLine":3,"endColumn":24},{"ruleId":"183","severity":1,"message":"215","line":5,"column":10,"nodeType":"185","messageId":"186","endLine":5,"endColumn":15},{"ruleId":"177","severity":1,"message":"216","line":89,"column":6,"nodeType":"179","endLine":89,"endColumn":23,"suggestions":"217"},{"ruleId":"183","severity":1,"message":"194","line":2,"column":24,"nodeType":"185","messageId":"186","endLine":2,"endColumn":33},{"ruleId":"177","severity":1,"message":"218","line":55,"column":6,"nodeType":"179","endLine":55,"endColumn":23,"suggestions":"219"},{"ruleId":"201","severity":1,"message":"202","line":72,"column":17,"nodeType":"203","endLine":72,"endColumn":35},{"ruleId":"201","severity":1,"message":"202","line":73,"column":17,"nodeType":"203","endLine":73,"endColumn":38},"no-native-reassign",["220"],"no-negated-in-lhs",["221"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getProfile' and 'isLogged'. Either include them or remove the dependency array.","ArrayExpression",["222"],["220"],["221"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'getExam', 'getProfile', and 'myToken'. Either include them or remove the dependency array.",["223"],"React Hook useEffect has a missing dependency: 'getProfile'. Either include it or remove the dependency array.",["224"],"'myProfile' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getChoice', 'getProfile', and 'getQuestion'. Either include them or remove the dependency array.",["225"],"'TextField' is defined but never used.","'useRouteMatch' is defined but never used.","'useParams' is defined but never used.","'setMyToken' is assigned a value but never used.","'setMyProfile' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getChoice' and 'getQuestion'. Either include them or remove the dependency array.",["226"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has missing dependencies: 'getCourse' and 'getProfile'. Either include them or remove the dependency array.",["227"],["228"],"'getToken' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getCourse' and 'getOtherCourse'. Either include them or remove the dependency array.",["229"],["230"],["220"],["221"],"'useEffect' is defined but never used.","'Link' is defined but never used.","'logIn' is defined but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["231"],"React Hook useEffect has missing dependencies: 'token' and 'userid'. Either include them or remove the dependency array.",["232"],"no-global-assign","no-unsafe-negation",{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"237","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},"Update the dependencies array to be: [getProfile, isLogged, token]",{"range":"254","text":"255"},"Update the dependencies array to be: [myProfile, examId, courseid, refresh, myToken, getProfile, getExam]",{"range":"256","text":"257"},"Update the dependencies array to be: [myToken, myProfile, getProfile]",{"range":"258","text":"259"},"Update the dependencies array to be: [refresh, examid, getProfile, getQuestion, getChoice]",{"range":"260","text":"261"},"Update the dependencies array to be: [refresh, examid, getQuestion, getChoice]",{"range":"262","text":"263"},"Update the dependencies array to be: [myToken, myProfile, getProfile, getCourse]",{"range":"264","text":"265"},{"range":"266","text":"259"},"Update the dependencies array to be: [getCourse, getOtherCourse]",{"range":"267","text":"268"},"Update the dependencies array to be: [myToken, myProfile, refresh, getProfile, getCourse]",{"range":"269","text":"270"},"Update the dependencies array to be: [refresh, examid, token]",{"range":"271","text":"272"},"Update the dependencies array to be: [refresh, examid, token, userid]",{"range":"273","text":"274"},[2429,2436],"[getProfile, isLogged, token]",[2647,2685],"[myProfile, examId, courseid, refresh, myToken, getProfile, getExam]",[908,928],"[myToken, myProfile, getProfile]",[4008,4025],"[refresh, examid, getProfile, getQuestion, getChoice]",[2042,2059],"[refresh, examid, getQuestion, getChoice]",[1246,1266],"[myToken, myProfile, getProfile, getCourse]",[766,786],[2287,2289],"[getCourse, getOtherCourse]",[2090,2119],"[myToken, myProfile, refresh, getProfile, getCourse]",[2313,2330],"[refresh, examid, token]",[1529,1546],"[refresh, examid, token, userid]"]