[{"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\index.js":"1","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\App.js":"2","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\reportWebVitals.js":"3","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Header.js":"4","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Users.js":"5","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Exam.js":"6","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Question.js":"7","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\QuestionEdit.js":"8","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\QuestionUser.js":"9","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\LogIn.js":"10","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Home.js":"11","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Register.js":"12","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Course.js":"13","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\CourseUser.js":"14","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\CourseEdit.js":"15","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Footer.js":"16","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\index.js":"17","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\reportWebVitals.js":"18","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\App.js":"19","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\Footer.js":"20","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\Header.js":"21","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\Exam.js":"22","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\Home.js":"23","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\Register.js":"24","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\LogIn.js":"25","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\Course.js":"26","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\CourseEdit.js":"27","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\Question.js":"28","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\CourseUser.js":"29","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\QuestionUser.js":"30","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\QuestionEdit.js":"31"},{"size":500,"mtime":1611128279946,"results":"32","hashOfConfig":"33"},{"size":3207,"mtime":1611744855573,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"33"},{"size":1174,"mtime":1611695694651,"results":"36","hashOfConfig":"33"},{"size":2274,"mtime":1609021106062,"results":"37","hashOfConfig":"33"},{"size":4146,"mtime":1611746327413,"results":"38","hashOfConfig":"33"},{"size":1178,"mtime":1611722791741,"results":"39","hashOfConfig":"33"},{"size":5491,"mtime":1611746644247,"results":"40","hashOfConfig":"33"},{"size":3365,"mtime":1611747406782,"results":"41","hashOfConfig":"33"},{"size":810,"mtime":1611606173444,"results":"42","hashOfConfig":"33"},{"size":1822,"mtime":1611746419089,"results":"43","hashOfConfig":"33"},{"size":1279,"mtime":1611606338079,"results":"44","hashOfConfig":"33"},{"size":1031,"mtime":1611744327392,"results":"45","hashOfConfig":"33"},{"size":3007,"mtime":1611744697791,"results":"46","hashOfConfig":"33"},{"size":2840,"mtime":1611746501650,"results":"47","hashOfConfig":"33"},{"size":417,"mtime":1610592434881,"results":"48","hashOfConfig":"33"},{"size":500,"mtime":1611128279946,"results":"49","hashOfConfig":"50"},{"size":362,"mtime":499162500000,"results":"51","hashOfConfig":"50"},{"size":3194,"mtime":1612165057695,"results":"52","hashOfConfig":"50"},{"size":417,"mtime":1610592434881,"results":"53","hashOfConfig":"50"},{"size":1174,"mtime":1611695694651,"results":"54","hashOfConfig":"50"},{"size":4214,"mtime":1612167107315,"results":"55","hashOfConfig":"50"},{"size":1937,"mtime":1611859487323,"results":"56","hashOfConfig":"50"},{"size":1810,"mtime":1611866683936,"results":"57","hashOfConfig":"50"},{"size":828,"mtime":1611864422481,"results":"58","hashOfConfig":"50"},{"size":1161,"mtime":1611859487322,"results":"59","hashOfConfig":"50"},{"size":2882,"mtime":1611863175404,"results":"60","hashOfConfig":"50"},{"size":1324,"mtime":1612164305533,"results":"61","hashOfConfig":"50"},{"size":3057,"mtime":1611867342441,"results":"62","hashOfConfig":"50"},{"size":3510,"mtime":1612167805263,"results":"63","hashOfConfig":"50"},{"size":5576,"mtime":1612170269953,"results":"64","hashOfConfig":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"1uw66iz",{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"67"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"1iql7mm",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"102"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"102"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"102"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"102"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"102"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"102"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"102"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"102"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"102"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\index.js",[],["140","141"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\App.js",["142"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\reportWebVitals.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Header.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Users.js",[],["143","144"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Exam.js",["145","146"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Question.js",["147"],"import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport QuestionEdit from './QuestionEdit.js'\r\nimport QuestionUser from './QuestionUser.js'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nconst Question = ({ token, profile }) => {\r\n  const [myToken, setMyToken] = useState(token)\r\n  const [myProfile, setMyProfile] = useState(profile)\r\n//  const [examId, setExamId] = useState(examid)\r\n  const { examid } = useParams()\r\n\r\n\r\n  const getToken = async () => {\r\n    setMyToken(localStorage.getItem('token'))\r\n  }\r\n\r\n  const getProfile = async () => {\r\n    await axios\r\n      .get(`http://localhost:3001/user/profile`, {\r\n        headers: {\r\n          'authorization': `${myToken}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        setMyProfile(response.data)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!myToken)\r\n      getToken()\r\n    if (!myProfile)\r\n      getProfile()\r\n  }, [myToken, myProfile])\r\n  \r\n  return (\r\n    myProfile.usertype === 'teacher' \r\n    ? <QuestionEdit token={myToken} profile={myProfile} /> \r\n    : <QuestionUser token={myToken} profile={myProfile} examid={examid} userid={myProfile.id} />\r\n  )\r\n}\r\n\r\nexport default Question","C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\QuestionEdit.js",["148","149"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\QuestionUser.js",["150","151","152","153","154","155","156","157","158"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\LogIn.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Home.js",["159"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Register.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Course.js",["160"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\CourseUser.js",["161","162"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\CourseEdit.js",["163"],"C:\\Users\\janma\\Projektit\\tenttiapp\\client\\src\\Footer.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\index.js",[],["164","165"],"C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\reportWebVitals.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\App.js",["166"],"import './App.css';\nimport { useEffect, useState } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport axios from 'axios'\n\nimport Header from './Header.js'\nimport Exam from './Exam.js'\nimport LogIn from './LogIn.js'\nimport Home from './Home.js'\nimport Register from './Register.js'\nimport Course from './Course.js'\nimport Footer from './Footer.js'\n\nimport { IntlProvider } from \"react-intl\";\nimport messages_fi from \"./translations/fi.json\";\nimport messages_en from \"./translations/en.json\";\n\nconst messages = {\n  'fi': messages_fi,\n  'en': messages_en\n}\n\nlet host\n\nif (process.env.NODE_ENV === 'production') \n  host = 'https://tenttiapp.herokuapp.com/'\nelse\n  host = `http://localhost:3001/`\n\n\nconst App = () => {\n  const [token, setToken] = useState(localStorage.getItem('token'))\n  const [isLogged, setIsLogged] = useState(false)\n  const [profile, setProfile] = useState(JSON.parse(localStorage.getItem('profile')))\n  const [language, setLanguage] = useState('fi')\n  \n  const changeLanguage = () => {\n    language === 'en' ? setLanguage('fi') : setLanguage('en')\n  }\n\n  const getProfile = async () => {\n    await axios\n      .get(`${host}user/profile`, {\n        headers: {\n          'authorization': `${token}`\n        }\n      })\n      .then(response => {\n        setProfile(response.data)\n        localStorage.setItem('profile', JSON.stringify(response.data)) // -- \n    })\n  }\n\n  const logIn = async (userEmail, userPassword) => {\n    const data = {\n      email: userEmail,\n      password: userPassword\n    }\n    await axios\n      .post(`${host}login`, data)\n      .then(response => {\n        setToken(response.data.token)\n        localStorage.setItem('token', response.data.token)\n      })\n      .catch(() => {\n        console.error('Log in Error')\n      })\n  }\n\n  const register = async (userName, userEmail, userPassword, userType) => {\n    const data = {\n      name: userName,\n      email: userEmail,\n      password: userPassword,\n      usertype: userType\n    }\n    await axios.post(`${host}register`, data)\n  }\n\n  const logOut = async () => {\n    localStorage.removeItem('token')\n    localStorage.removeItem('profile') // -- \n    setToken(null)\n    setProfile(null)\n    setIsLogged(false)\n  }\n\n  useEffect(() => {\n    if (token === null) {\n      setIsLogged(false)\n    }\n    else\n      setIsLogged(true)\n\n    if (isLogged) {\n      getProfile() \n    }\n  }, [token])\n\n  return (\n    <Router>\n      <IntlProvider locale='fi' messages={messages[language]}>\n        <Header token={token} logOut={logOut} changeLanguage={changeLanguage} />\n        <Switch>\n          <Route path=\"/course/:courseid/exam\">\n            <Exam token={token} profile={profile} />\n          </Route>\n          <Route path=\"/register\">\n            <Register register={register} />\n          </Route>\n          <Route path=\"/courses\">\n            <Course token={token} profile={profile} />\n          </Route>\n          <Route path=\"/\">\n            {isLogged ? <Home token={token} profile={profile} /> : <LogIn logIn={logIn} />}\n          </Route>\n        </Switch>\n        <Footer locale={language} />\n      </IntlProvider>\n    </Router>\n  )\n}\n\nexport default App;\n","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\Footer.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\Header.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\Exam.js",["167","168"],"import { useEffect, useState } from 'react'\r\nimport { Button, TextField } from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  Redirect,\r\n  useParams\r\n} from \"react-router-dom\";\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\nimport Question from './Question.js'\r\n\r\nlet host\r\n\r\nif (process.env.NODE_ENV === 'production') \r\n  host = 'https://tenttiapp.herokuapp.com/'\r\nelse\r\n  host = `http://localhost:3001/`\r\n\r\nconst Exam = ({ token, profile }) => {\r\n  const { path, url } = useRouteMatch()\r\n  const [myToken, setMyToken] = useState(token)\r\n  const [myProfile, setMyProfile] = useState(profile)\r\n  const [exam, setExam] = useState([])\r\n  const [examId, setExamId] = useState()\r\n  const [refresh, setRefresh] = useState(false)\r\n  //const [courseId, setCourseId] = useState()\r\n  const { courseid } = useParams()\r\n\r\n  const getToken = async () => {\r\n    setMyToken(localStorage.getItem('token'))\r\n  }\r\n\r\n  const getProfile = async () => {\r\n    await axios\r\n      .get(`${host}user/profile`, {\r\n        headers: {\r\n          'authorization': `${myToken}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        setMyProfile(response.data)\r\n    })\r\n  }\r\n\r\n  const getExam = async () => {\r\n    const data = {\r\n      user: myProfile.id,\r\n      course: courseid\r\n    }\r\n    await axios\r\n      .put(`${host}user/course/exam`, data, {\r\n        headers: {\r\n          'authorization': `${myToken}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        if (response.data[0].id != null)\r\n          setExam(response.data)\r\n      })\r\n  }\r\n\r\n  const addExam = async () => {\r\n    const data = {\r\n      user: myProfile.id,\r\n      course: courseid\r\n    }\r\n    await axios\r\n      .put(`${host}user/teacher/new/exam`, data, {\r\n        headers: {\r\n          'authorization': `${myToken}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        setRefresh(!refresh)\r\n      })\r\n  }\r\n\r\n  const deleteExam = async () => {\r\n    const data = {\r\n      id: examId\r\n    }\r\n    await axios\r\n      .put(`${host}user/teacher/delete/exam`, data, {\r\n        headers: {\r\n          'authorization': `${myToken}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        setExamId(null)\r\n        setRefresh(!refresh)\r\n      })\r\n  }\r\n\r\n  const updateExam = async (id, value) => {\r\n    const data = {\r\n      id: id,\r\n      name: value\r\n    }\r\n    await axios.put(`${host}user/teacher/update/exam/`, data, {\r\n      headers: {\r\n        'authorization': `${myToken}`\r\n      }\r\n    })\r\n    .then(response => {\r\n      setRefresh(!refresh)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!myToken)\r\n      getToken()\r\n    if (!myProfile)\r\n      getProfile()\r\n    if (myProfile)\r\n      getExam()\r\n  }, [myProfile, examId, courseid, refresh])\r\n\r\n  if (!myProfile)\r\n    return <></>\r\n\r\n  return (\r\n    <div className=\"Tenttilista\">\r\n      <div>\r\n        {exam.length > 0 \r\n          ? exam.map((item, index) =>  \r\n            <Button key={`exambutton${index}`}\r\n              component={Link} \r\n              to={`${url}/${item.id}`}\r\n              onClick={() => (setExamId(item.id))}\r\n              color=\"primary\">\r\n                {(myProfile.usertype === 'teacher' && exam.length > 0)\r\n                ? <TextField \r\n                    defaultValue={item.name}\r\n                    style={ {width: '90%'} }\r\n                    onBlur={ (e) => updateExam(item.id, e.target.value) } \r\n                  /> \r\n                : item.name}\r\n            </Button>) \r\n          : \"\"}\r\n        {myProfile.usertype === \"teacher\" ? <Button onClick={() => {addExam()}} color=\"primary\" > + </Button> : \"\"}\r\n      </div>\r\n      <Switch>\r\n        <Route exact path={path}>\r\n        </Route>\r\n        <Route path={`${path}/:examid`}> \r\n        {/* <Route path={`${path}/question`}> */}\r\n          <Question token={myToken} profile={myProfile} />\r\n        </Route>\r\n      </Switch>\r\n      {(myProfile.usertype === \"teacher\" && examId) \r\n      ? <div className=\"sulkuNappi\">\r\n          <Button component={Link} to={`${url}`} onClick={deleteExam} color=\"secondary\" > \r\n            <FormattedMessage id=\"exam.remove\" /> \r\n          </Button> \r\n        </div> \r\n      : \"\"}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Exam","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\Home.js",["169"],"import { useEffect, useState } from 'react'\r\nimport { Button, Card } from '@material-ui/core'\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios'\r\n\r\nlet host\r\n\r\nif (process.env.NODE_ENV === 'production') \r\n  host = 'https://tenttiapp.herokuapp.com/'\r\nelse\r\n  host = `http://localhost:3001/`\r\n\r\nconst Home = ({ token, profile }) => {\r\n  const [myToken, setMyToken] = useState(token)\r\n  const [myProfile, setMyProfile] = useState(profile)\r\n  const [course, setCourse] = useState([]) \r\n  \r\n  const getToken = async () => {\r\n    setMyToken(localStorage.getItem('token'))\r\n  }\r\n\r\n  const getProfile = async () => {\r\n    await axios\r\n      .get(`${host}user/profile`, {\r\n        headers: {\r\n          'authorization': `${myToken}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        setMyProfile(response.data)\r\n        localStorage.setItem('profile', JSON.stringify(response.data))\r\n    })\r\n  }\r\n\r\n  const getCourse = async () => {\r\n    const data = {\r\n      id: myProfile.id\r\n    }\r\n    await axios\r\n      .put(`${host}user/course`, data, {\r\n        headers: {\r\n          'authorization': `${myToken}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        setCourse(response.data)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!myToken)\r\n      getToken()\r\n    if (!myProfile)\r\n      getProfile()\r\n    if (myProfile)\r\n      getCourse()\r\n  }, [myToken, myProfile])\r\n\r\n  if (!myProfile)\r\n    return <></>\r\n  if (!myProfile.id)\r\n    return <></>\r\n  return (\r\n    <div className=\"Tenttilista\">\r\n      <Card className=\"kortti\">\r\n        <div>\r\n          {myProfile.id} | {myProfile.name} | {myProfile.email} | {myProfile.usertype} <br />\r\n        </div>\r\n        <div>\r\n        {course.map((item, index) => <div key={`homebutton${index}`}>\r\n          <Button component={Link} to={`course/${item.id}/exam`} > {item.name} </Button>\r\n        </div>)}\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\Register.js",["170"],"import { useState } from 'react'\r\nimport { Button, TextField, Card, MenuItem } from '@material-ui/core'\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\nconst usertypes = [\r\n  {\r\n    value: 'student',\r\n    label: 'student'\r\n  },\r\n  {\r\n    value: 'teacher',\r\n    label: 'teacher'\r\n  }  \r\n]\r\n\r\nconst Register = ({ register }) => {\r\n  const [userName, setUserName] = useState()\r\n  const [userEmail, setUserEmail] = useState()\r\n  const [userPassword, setUserPassword] = useState()\r\n  const [userType, setUserType] = useState('student')\r\n\r\n  return (\r\n    <div className=\"Tenttilista\">\r\n      <Card className=\"kortti\">\r\n        <div>\r\n          <TextField label={'name'} onChange={(e) => setUserName(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <TextField label={'email'} onChange={(e) => setUserEmail(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <TextField label={'password'} type={'password'} onChange={(e) => setUserPassword(e.target.value)} /> \r\n        </div>\r\n        <div>\r\n          <TextField \r\n            select\r\n            label={'usertype'} \r\n            value={userType}\r\n            onChange={(e) => setUserType(e.target.value)}\r\n            SelectProps={{ native: true }}\r\n          >\r\n              {usertypes.map(option => (\r\n                <option key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </option>\r\n              ))}\r\n          </TextField>\r\n          <br /> \r\n        </div>\r\n        <div>\r\n          <Button component={Link} to=\"/\" onClick={() => register(userName, userEmail, userPassword, userType)}>  \r\n            <FormattedMessage id=\"register.register\" /> \r\n          </Button>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register\r\n","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\LogIn.js",[],"C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\Course.js",["171"],"import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport CourseEdit from './CourseEdit.js'\r\nimport CourseUser from './CourseUser.js'\r\n\r\nlet host\r\n\r\nif (process.env.NODE_ENV === 'production') \r\n  host = 'https://tenttiapp.herokuapp.com/'\r\nelse\r\n  host = `http://localhost:3001/`\r\n\r\nconst Course = ({ token, profile }) => {\r\n  const [myToken, setMyToken] = useState(token)\r\n  const [myProfile, setMyProfile] = useState(profile)\r\n\r\n  const getToken = async () => {\r\n    setMyToken(localStorage.getItem('token'))\r\n  }\r\n\r\n  const getProfile = async () => {\r\n    await axios\r\n      .get(`${host}user/profile`, {\r\n        headers: {\r\n          'authorization': `${myToken}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        setMyProfile(response.data)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!myToken)\r\n      getToken()\r\n    if (!myProfile)\r\n      getProfile()\r\n  }, [myToken, myProfile])\r\n\r\n  if (!myProfile)\r\n    return <></>\r\n\r\n  return (\r\n    myProfile.usertype === 'teacher' \r\n    ? <CourseEdit token={myToken} profile={myProfile} /> \r\n    : <CourseUser token={myToken} profile={myProfile} />\r\n  )\r\n}\r\n\r\nexport default Course\r\n","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\CourseEdit.js",["172"],"import { useEffect, useState } from 'react'\r\nimport { Button, TextField, Card } from '@material-ui/core'\r\nimport axios from 'axios'\r\n\r\nlet host\r\n\r\nif (process.env.NODE_ENV === 'production') \r\n  host = 'https://tenttiapp.herokuapp.com/'\r\nelse\r\n  host = `http://localhost:3001/`\r\n\r\nconst CourseEdit = ({ token, profile }) => {\r\n  const [myToken, setMyToken] = useState(token)\r\n  const [myProfile, setMyProfile] = useState(profile)\r\n  const [course, setCourse] = useState([])\r\n  const [courseName, setCourseName] = useState('')\r\n  const [refresh, setRefresh] = useState(false)\r\n\r\n  const getToken = async () => {\r\n    setMyToken(localStorage.getItem('token'))\r\n  }\r\n\r\n  const getProfile = async () => {\r\n    await axios\r\n      .get(`${host}user/profile`, {\r\n        headers: {\r\n          'authorization': `${myToken}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        setMyProfile(response.data)\r\n        localStorage.setItem('profile', JSON.stringify(response.data))\r\n    })\r\n  }\r\n\r\n  const getCourse = async () => {\r\n    const data = {\r\n      id: myProfile.id\r\n    }\r\n    await axios\r\n      .put(`${host}user/course`, data, {\r\n        headers: {\r\n          'authorization': `${myToken}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        setCourse(response.data)\r\n    })\r\n  }\r\n\r\n  const newCourse = async () => {\r\n    if (courseName.length < 1) \r\n      return\r\n    const data = {\r\n      id: profile.id,\r\n      name: courseName\r\n    }\r\n    await axios.put(`${host}user/teacher/new/course`, data, {\r\n      headers: {\r\n        'authorization': `${myToken}`\r\n      }\r\n    })\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const deleteCourse = async (courseId) => {\r\n    const data = {\r\n      id: courseId\r\n    }\r\n    await axios.put(`${host}user/teacher/delete/course`, data, {\r\n      headers: {\r\n        'authorization': `${myToken}`\r\n      }\r\n    })\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  /* const getCourseData = async () => {\r\n    await getMyCourse()\r\n    await getOtherCourse()\r\n    setRefresh(!refresh)\r\n  } */\r\n  useEffect(() => {\r\n    if (!myToken)\r\n      getToken()\r\n    if (!myProfile)\r\n      getProfile()\r\n    if (myProfile) \r\n      getCourse()\r\n  }, [myToken, myProfile, refresh])\r\n\r\n  return (\r\n    <div className=\"Tenttilista\">\r\n      <Card className=\"kortti\">\r\n        {course.map((item, index) => <div key={`coursediv${index}`}>\r\n          <Button> {item.name} </Button>\r\n          <Button onClick={() => deleteCourse(item.id)} color=\"secondary\" > × </Button>\r\n        </div>)}\r\n        <div>\r\n        <TextField \r\n          label={\"Kurssin Nimi\"}\r\n          style={ {width: '50%'} } \r\n          onChange={ (e) => setCourseName(e.target.value) } \r\n        />\r\n        </div>\r\n        <Button \r\n          onClick={() => newCourse()} \r\n          color=\"primary\" >\r\n            Uusi Kurssi\r\n        </Button>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CourseEdit\r\n","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\Question.js",["173"],"import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport QuestionEdit from './QuestionEdit.js'\r\nimport QuestionUser from './QuestionUser.js'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nlet host\r\n\r\nif (process.env.NODE_ENV === 'production') \r\n  host = 'https://tenttiapp.herokuapp.com/'\r\nelse\r\n  host = `http://localhost:3001/`\r\n\r\nconst Question = ({ token, profile }) => {\r\n  const [myToken, setMyToken] = useState(token)\r\n  const [myProfile, setMyProfile] = useState(profile)\r\n//  const [examId, setExamId] = useState(examid)\r\n  const { examid } = useParams()\r\n\r\n\r\n  const getToken = async () => {\r\n    setMyToken(localStorage.getItem('token'))\r\n  }\r\n\r\n  const getProfile = async () => {\r\n    await axios\r\n      .get(`${host}user/profile`, {\r\n        headers: {\r\n          'authorization': `${myToken}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        setMyProfile(response.data)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!myToken)\r\n      getToken()\r\n    if (!myProfile)\r\n      getProfile()\r\n  }, [myToken, myProfile])\r\n  \r\n  return (\r\n    myProfile.usertype === 'teacher' \r\n    ? <QuestionEdit token={myToken} profile={myProfile} examid={examid} /> \r\n    : <QuestionUser token={myToken} profile={myProfile} examid={examid} userid={myProfile.id} />\r\n  )\r\n}\r\n\r\nexport default Question","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\CourseUser.js",["174","175"],"import { useEffect, useState } from 'react'\r\nimport { Button, Card } from '@material-ui/core'\r\nimport axios from 'axios'\r\n\r\nlet host\r\n\r\nif (process.env.NODE_ENV === 'production') \r\n  host = 'https://tenttiapp.herokuapp.com/'\r\nelse\r\n  host = `http://localhost:3001/`\r\n\r\nconst CourseUser = ({ token, profile }) => {\r\n  const [myToken, setMyToken] = useState(token)\r\n  const [myProfile, setMyProfile] = useState(profile)\r\n\r\n  const [course, setCourse] = useState([])\r\n  const [otherCourse, setOtherCourse] = useState([])\r\n  const [refresh, setRefresh] = useState(false)\r\n\r\n  const getToken = async () => {\r\n    setMyToken(localStorage.getItem('token'))\r\n  }\r\n\r\n  const getProfile = async () => {\r\n    await axios\r\n      .get(`${host}user/profile`, {\r\n        headers: {\r\n          'authorization': `${myToken}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        setMyProfile(response.data)\r\n        localStorage.setItem('profile', JSON.stringify(response.data))\r\n    })\r\n  }\r\n\r\n  const getCourse = async () => {\r\n    const data = {\r\n      id: myProfile.id\r\n    }\r\n    await axios\r\n      .put(`${host}user/course`, data, {\r\n        headers: {\r\n          'authorization': `${myToken}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        setCourse(response.data)\r\n      })\r\n  }\r\n\r\n  const getOtherCourse = async () => {\r\n    const data = {\r\n      id: profile.id\r\n    }\r\n    await axios\r\n      .put(`${host}user/student/courses/other`, data, {\r\n        headers: {\r\n          'authorization': `${myToken}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        setOtherCourse(response.data)\r\n    })\r\n  }\r\n\r\n  const joinCourse = async (courseId) => {\r\n    const data = {\r\n      userid: profile.id,\r\n      courseid: courseId\r\n    }\r\n    await axios.put(`${host}user/student/courses/join`, data, {\r\n      headers: {\r\n        'authorization': `${myToken}`\r\n      }\r\n    })\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const leaveCourse = async (courseId) => {\r\n    const data = {\r\n      userid: profile.id,\r\n      courseid: courseId\r\n    }\r\n\r\n    await axios.put(`${host}user/student/courses/leave`, data, {\r\n      headers: {\r\n        'authorization': `${myToken}`\r\n      }\r\n    })\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!myToken)\r\n      getToken()\r\n    if (!myProfile)\r\n      getProfile()\r\n    getCourse()\r\n    getOtherCourse()\r\n  }, [refresh])\r\n\r\n  return (\r\n    <div className=\"Tenttilista\">\r\n      <Card className=\"kortti\">\r\n        Minun Kurssini\r\n        {course.map((item, index) => \r\n          <div key={`course${index}`}>\r\n            {/* <Button onClick={() => leaveCourse(item.id)}>  */}\r\n            <Button> \r\n              {item.name} \r\n            </Button>\r\n          </div>)}\r\n      </Card>\r\n      <Card className=\"kortti\">\r\n        Muut Kurssit\r\n        {otherCourse.map((item, index) => \r\n          <div key={`other${index}`}>\r\n            <Button onClick={() => joinCourse(item.id)}> \r\n              {item.name} \r\n            </Button>\r\n          </div>)}\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CourseUser\r\n","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\QuestionUser.js",["176","177","178","179","180","181","182","183","184"],"import { useEffect, useState } from 'react'\r\nimport { Button, Card, TextField, Checkbox } from '@material-ui/core'\r\nimport { green } from '@material-ui/core/colors'\r\nimport axios from 'axios'\r\nimport {\r\n  useRouteMatch,\r\n  useParams\r\n} from \"react-router-dom\";\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\nlet host\r\n\r\nif (process.env.NODE_ENV === 'production') \r\n  host = 'https://tenttiapp.herokuapp.com/'\r\nelse\r\n  host = `http://localhost:3001/`\r\n\r\nconst QuestionUser = ({ token, profile, examid, userid }) => {\r\n\r\n  const [myToken, setMyToken] = useState(token)\r\n  const [myProfile, setMyProfile] = useState(profile)\r\n\r\n  const [question, setQuestion] = useState([]) \r\n  const [choice, setChoice] = useState([]) \r\n  const [finished, setFinished] = useState(false)\r\n  const [refresh, setRefresh] = useState(false)\r\n\r\n  const getQuestion = async () => {\r\n    const data = {\r\n      id: examid\r\n    }\r\n    await axios\r\n      .put(`${host}user/teacher/get/question`, data, {\r\n        headers: {\r\n          'authorization': `${myToken}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        setQuestion(response.data)\r\n    })\r\n  }\r\n\r\n  const getChoice = async () => {\r\n    const data = {\r\n      user: userid,\r\n      exam: examid\r\n    }\r\n    await axios\r\n      .put(`${host}user/student/get/choice`, data, {\r\n        headers: {\r\n          'authorization': `${myToken}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        setChoice(response.data)\r\n        setFinished(response.data[0].finished)\r\n    })\r\n  }\r\n\r\n  const updateAnswer = async (id, value) => {\r\n    const data = {\r\n      exam: examid,\r\n      user: userid,\r\n      choice: id,\r\n      value: value\r\n    }\r\n    await axios.put(`${host}user/student/update/answer/`, data, {\r\n      headers: {\r\n        'authorization': `${myToken}`\r\n      }\r\n    })\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  const updateFinished = async () => {\r\n    const data = {\r\n      exam: examid,\r\n      user: userid\r\n    }\r\n    await axios.put(`${host}user/student/finished/`, data, {\r\n      headers: {\r\n        'authorization': `${myToken}`\r\n      }\r\n    })\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getQuestion()\r\n    getChoice()\r\n  }, [refresh, examid])\r\n\r\n  return (\r\n    <div>\r\n      {question.map((q, index) => \r\n        <Card className=\"kortti\" key={`questioncard${index}`}> \r\n          <div>\r\n            {q.question}\r\n            {/* // if finished then checkicon else blockicon */}\r\n          </div>\r\n          {choice.filter(filtered => (filtered.questionid === q.id && filtered.choiceid !== null)).map((c, index) => \r\n            <div key={`checkboxdivi${index}`}>\r\n              <Checkbox\r\n                checked={c.answer}\r\n                disabled={ finished }\r\n                /* onChange={ (e) => putCorrectChoice(c.choiceid, e.target.checked) }  */\r\n                checked={c.answer}\r\n                disabled={ finished }\r\n                onChange={ (e) => updateAnswer(c.choiceid, e.target.checked) } \r\n              />\r\n              {finished \r\n              ? <Checkbox \r\n                  style={{ color: green[500] }}\r\n                  checked={c.correct}\r\n                /> \r\n              : \"\"}\r\n              <label>{c.name}</label>\r\n            </div>\r\n          )}\r\n        </Card>\r\n      )}\r\n      <div>\r\n        <Button onClick={updateFinished} variant=\"contained\" color=\"primary\" > \r\n          <FormattedMessage id=\"question.finished\" /> \r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuestionUser\r\n","C:\\Users\\janma\\Projektit\\tenttiapp-heroku\\client\\src\\QuestionEdit.js",["185","186","187"],{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":97,"column":6,"nodeType":"194","endLine":97,"endColumn":13,"suggestions":"195"},{"ruleId":"188","replacedBy":"196"},{"ruleId":"190","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":9,"column":3,"nodeType":"200","messageId":"201","endLine":9,"endColumn":11},{"ruleId":"192","severity":1,"message":"202","line":114,"column":6,"nodeType":"194","endLine":114,"endColumn":44,"suggestions":"203"},{"ruleId":"192","severity":1,"message":"204","line":36,"column":6,"nodeType":"194","endLine":36,"endColumn":26,"suggestions":"205"},{"ruleId":"198","severity":1,"message":"206","line":14,"column":10,"nodeType":"200","messageId":"201","endLine":14,"endColumn":19},{"ruleId":"192","severity":1,"message":"207","line":175,"column":6,"nodeType":"194","endLine":175,"endColumn":23,"suggestions":"208"},{"ruleId":"198","severity":1,"message":"209","line":2,"column":24,"nodeType":"200","messageId":"201","endLine":2,"endColumn":33},{"ruleId":"198","severity":1,"message":"210","line":6,"column":3,"nodeType":"200","messageId":"201","endLine":6,"endColumn":16},{"ruleId":"198","severity":1,"message":"211","line":7,"column":3,"nodeType":"200","messageId":"201","endLine":7,"endColumn":12},{"ruleId":"198","severity":1,"message":"212","line":13,"column":19,"nodeType":"200","messageId":"201","endLine":13,"endColumn":29},{"ruleId":"198","severity":1,"message":"206","line":14,"column":10,"nodeType":"200","messageId":"201","endLine":14,"endColumn":19},{"ruleId":"198","severity":1,"message":"213","line":14,"column":21,"nodeType":"200","messageId":"201","endLine":14,"endColumn":33},{"ruleId":"192","severity":1,"message":"214","line":84,"column":6,"nodeType":"194","endLine":84,"endColumn":23,"suggestions":"215"},{"ruleId":"216","severity":1,"message":"217","line":100,"column":17,"nodeType":"218","endLine":100,"endColumn":35},{"ruleId":"216","severity":1,"message":"217","line":101,"column":17,"nodeType":"218","endLine":101,"endColumn":38},{"ruleId":"192","severity":1,"message":"219","line":50,"column":6,"nodeType":"194","endLine":50,"endColumn":26,"suggestions":"220"},{"ruleId":"192","severity":1,"message":"204","line":32,"column":6,"nodeType":"194","endLine":32,"endColumn":26,"suggestions":"221"},{"ruleId":"198","severity":1,"message":"222","line":13,"column":9,"nodeType":"200","messageId":"201","endLine":13,"endColumn":17},{"ruleId":"192","severity":1,"message":"223","line":94,"column":6,"nodeType":"194","endLine":94,"endColumn":8,"suggestions":"224"},{"ruleId":"192","severity":1,"message":"219","line":85,"column":6,"nodeType":"194","endLine":85,"endColumn":35,"suggestions":"225"},{"ruleId":"188","replacedBy":"226"},{"ruleId":"190","replacedBy":"227"},{"ruleId":"192","severity":1,"message":"193","line":102,"column":6,"nodeType":"194","endLine":102,"endColumn":13,"suggestions":"228"},{"ruleId":"198","severity":1,"message":"199","line":9,"column":3,"nodeType":"200","messageId":"201","endLine":9,"endColumn":11},{"ruleId":"192","severity":1,"message":"202","line":120,"column":6,"nodeType":"194","endLine":120,"endColumn":44,"suggestions":"229"},{"ruleId":"192","severity":1,"message":"219","line":57,"column":6,"nodeType":"194","endLine":57,"endColumn":26,"suggestions":"230"},{"ruleId":"198","severity":1,"message":"231","line":2,"column":35,"nodeType":"200","messageId":"201","endLine":2,"endColumn":43},{"ruleId":"192","severity":1,"message":"204","line":39,"column":6,"nodeType":"194","endLine":39,"endColumn":26,"suggestions":"232"},{"ruleId":"192","severity":1,"message":"219","line":90,"column":6,"nodeType":"194","endLine":90,"endColumn":35,"suggestions":"233"},{"ruleId":"192","severity":1,"message":"204","line":43,"column":6,"nodeType":"194","endLine":43,"endColumn":26,"suggestions":"234"},{"ruleId":"198","severity":1,"message":"235","line":80,"column":9,"nodeType":"200","messageId":"201","endLine":80,"endColumn":20},{"ruleId":"192","severity":1,"message":"236","line":101,"column":6,"nodeType":"194","endLine":101,"endColumn":15,"suggestions":"237"},{"ruleId":"198","severity":1,"message":"209","line":2,"column":24,"nodeType":"200","messageId":"201","endLine":2,"endColumn":33},{"ruleId":"198","severity":1,"message":"210","line":6,"column":3,"nodeType":"200","messageId":"201","endLine":6,"endColumn":16},{"ruleId":"198","severity":1,"message":"211","line":7,"column":3,"nodeType":"200","messageId":"201","endLine":7,"endColumn":12},{"ruleId":"198","severity":1,"message":"212","line":20,"column":19,"nodeType":"200","messageId":"201","endLine":20,"endColumn":29},{"ruleId":"198","severity":1,"message":"206","line":21,"column":10,"nodeType":"200","messageId":"201","endLine":21,"endColumn":19},{"ruleId":"198","severity":1,"message":"213","line":21,"column":21,"nodeType":"200","messageId":"201","endLine":21,"endColumn":33},{"ruleId":"192","severity":1,"message":"214","line":91,"column":6,"nodeType":"194","endLine":91,"endColumn":23,"suggestions":"238"},{"ruleId":"216","severity":1,"message":"217","line":107,"column":17,"nodeType":"218","endLine":107,"endColumn":35},{"ruleId":"216","severity":1,"message":"217","line":108,"column":17,"nodeType":"218","endLine":108,"endColumn":38},{"ruleId":"198","severity":1,"message":"211","line":7,"column":3,"nodeType":"200","messageId":"201","endLine":7,"endColumn":12},{"ruleId":"198","severity":1,"message":"206","line":21,"column":10,"nodeType":"200","messageId":"201","endLine":21,"endColumn":19},{"ruleId":"192","severity":1,"message":"207","line":184,"column":6,"nodeType":"194","endLine":184,"endColumn":23,"suggestions":"239"},"no-native-reassign",["240"],"no-negated-in-lhs",["241"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getProfile' and 'isLogged'. Either include them or remove the dependency array.","ArrayExpression",["242"],["240"],["241"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'getExam', 'getProfile', and 'myToken'. Either include them or remove the dependency array.",["243"],"React Hook useEffect has a missing dependency: 'getProfile'. Either include it or remove the dependency array.",["244"],"'myProfile' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getChoice', 'getProfile', and 'getQuestion'. Either include them or remove the dependency array.",["245"],"'TextField' is defined but never used.","'useRouteMatch' is defined but never used.","'useParams' is defined but never used.","'setMyToken' is assigned a value but never used.","'setMyProfile' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getChoice' and 'getQuestion'. Either include them or remove the dependency array.",["246"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has missing dependencies: 'getCourse' and 'getProfile'. Either include them or remove the dependency array.",["247"],["248"],"'getToken' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getCourse' and 'getOtherCourse'. Either include them or remove the dependency array.",["249"],["250"],["240"],["241"],["251"],["252"],["253"],"'MenuItem' is defined but never used.",["254"],["255"],["256"],"'leaveCourse' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getCourse', 'getOtherCourse', 'getProfile', 'myProfile', and 'myToken'. Either include them or remove the dependency array.",["257"],["258"],["259"],"no-global-assign","no-unsafe-negation",{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"264","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"260","fix":"277"},{"desc":"262","fix":"278"},{"desc":"270","fix":"279"},{"desc":"264","fix":"280"},{"desc":"275","fix":"281"},{"desc":"264","fix":"282"},{"desc":"283","fix":"284"},{"desc":"268","fix":"285"},{"desc":"266","fix":"286"},"Update the dependencies array to be: [getProfile, isLogged, token]",{"range":"287","text":"288"},"Update the dependencies array to be: [myProfile, examId, courseid, refresh, myToken, getProfile, getExam]",{"range":"289","text":"290"},"Update the dependencies array to be: [myToken, myProfile, getProfile]",{"range":"291","text":"292"},"Update the dependencies array to be: [refresh, examid, getProfile, getQuestion, getChoice]",{"range":"293","text":"294"},"Update the dependencies array to be: [refresh, examid, getQuestion, getChoice]",{"range":"295","text":"296"},"Update the dependencies array to be: [myToken, myProfile, getProfile, getCourse]",{"range":"297","text":"298"},{"range":"299","text":"292"},"Update the dependencies array to be: [getCourse, getOtherCourse]",{"range":"300","text":"301"},"Update the dependencies array to be: [myToken, myProfile, refresh, getProfile, getCourse]",{"range":"302","text":"303"},{"range":"304","text":"288"},{"range":"305","text":"290"},{"range":"306","text":"298"},{"range":"307","text":"292"},{"range":"308","text":"303"},{"range":"309","text":"292"},"Update the dependencies array to be: [getCourse, getOtherCourse, getProfile, myProfile, myToken, refresh]",{"range":"310","text":"311"},{"range":"312","text":"296"},{"range":"313","text":"294"},[2429,2436],"[getProfile, isLogged, token]",[2647,2685],"[myProfile, examId, courseid, refresh, myToken, getProfile, getExam]",[908,928],"[myToken, myProfile, getProfile]",[4008,4025],"[refresh, examid, getProfile, getQuestion, getChoice]",[2042,2059],"[refresh, examid, getQuestion, getChoice]",[1246,1266],"[myToken, myProfile, getProfile, getCourse]",[766,786],[2287,2289],"[getCourse, getOtherCourse]",[2090,2119],"[myToken, myProfile, refresh, getProfile, getCourse]",[2416,2423],[2715,2753],[1361,1381],[896,916],[2156,2185],[1038,1058],[2351,2360],"[getCourse, getOtherCourse, getProfile, myProfile, myToken, refresh]",[2187,2204],[4054,4071]]